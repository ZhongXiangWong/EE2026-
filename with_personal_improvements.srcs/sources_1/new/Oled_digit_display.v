`timescale 1ns / 1ps
//////////////////////////////////////////////////////////////////////////////////
// Company: 
// Engineer: 
// 
// Create Date: 07.03.2023 18:18:26
// Design Name: 
// Module Name: Oled_digit_display
// Project Name: 
// Target Devices: 
// Tool Versions: 
// Description: 
// 
// Dependencies: 
// 
// Revision:
// Revision 0.01 - File Created
// Additional Comments:
// 
//////////////////////////////////////////////////////////////////////////////////


module Oled_digit_display(
        input sw,
        input [6:0] oled_seg,
        input [6:0] X,
        input [6:0] Y,
        output [15:0] oled_pixel_data
    );
    parameter DISPLAY_WIDTH = 96;
    parameter DISPLAY_HEIGHT = 64;
    parameter BORDER_X = 60;
    parameter BORDER_Y = 60;
    parameter BORDER_WIDTH = 3;
    parameter BORDER_COLOR = 16'b00000_111111_00000; // green

    parameter SEGMENT_LEN = 20;
    parameter SEGMENT_WIDTH = 3;
    parameter SEGMENT_BORDER_WIDTH = 1;
    parameter BACKGROUND_COLOR = 16'b0;
    parameter SEGMENT_COLOR = ~BACKGROUND_COLOR;

    parameter ZERO = 7'b1000000;
    parameter ONE = 7'b1111001;
    parameter TWO = 7'b0100100;
    parameter THREE = 7'b0110000;
    parameter FOUR = 7'b0011001;
    parameter FIVE = 7'b0010010;
    parameter SIX = 7'b0000010;
    parameter SEVEN = 7'b1111000;
    parameter EIGHT = 7'b0000000;
    parameter NINE = 7'b0010000;

    // Segment filled configurations
    parameter SEG_ONE_START_PIXEL_X = 19;
    parameter SEG_ONE_START_PIXEL_Y = 4;
    parameter SEG_TWO_START_PIXEL_X = 41;
    parameter SEG_TWO_START_PIXEL_Y = 9; // 4 + 3 + 1
    parameter SEG_THREE_START_PIXEL_X = 41;
    parameter SEG_THREE_START_PIXEL_Y = 31; // 4 + 3 + 1 + 20 + 1 + 1
    parameter SEG_FOUR_START_PIXEL_X = 19;
    parameter SEG_FOUR_START_PIXEL_Y = 53;
    parameter SEG_FIVE_START_PIXEL_X = 14;
    parameter SEG_FIVE_START_PIXEL_Y = 31;
    parameter SEG_SIX_START_PIXEL_X = 14;
    parameter SEG_SIX_START_PIXEL_Y = 9;
    parameter SEG_SEVEN_START_PIXEL_X = 19;
    parameter SEG_SEVEN_START_PIXEL_Y = 28;

    // Segment border configurations
    parameter SEG_ONE_BORDER_START_PIXEL_X = SEG_ONE_START_PIXEL_X - 1;
    parameter SEG_ONE_BORDER_START_PIXEL_Y = SEG_ONE_START_PIXEL_Y - 1;
    parameter SEG_TWO_BORDER_START_PIXEL_X = SEG_TWO_START_PIXEL_X - 1;
    parameter SEG_TWO_BORDER_START_PIXEL_Y = SEG_TWO_START_PIXEL_Y - 1;
    parameter SEG_THREE_BORDER_START_PIXEL_X = SEG_THREE_START_PIXEL_X - 1;
    parameter SEG_THREE_BORDER_START_PIXEL_Y = SEG_THREE_START_PIXEL_Y - 1;
    parameter SEG_FOUR_BORDER_START_PIXEL_X = SEG_FOUR_START_PIXEL_X - 1;
    parameter SEG_FOUR_BORDER_START_PIXEL_Y = SEG_FOUR_START_PIXEL_Y - 1;
    parameter SEG_FIVE_BORDER_START_PIXEL_X = SEG_FIVE_START_PIXEL_X - 1;
    parameter SEG_FIVE_BORDER_START_PIXEL_Y = SEG_FIVE_START_PIXEL_Y - 1;
    parameter SEG_SIX_BORDER_START_PIXEL_X = SEG_SIX_START_PIXEL_X - 1;
    parameter SEG_SIX_BORDER_START_PIXEL_Y = SEG_SIX_START_PIXEL_Y - 1;
    parameter SEG_SEVEN_BORDER_START_PIXEL_X = SEG_SEVEN_START_PIXEL_X - 1;
    parameter SEG_SEVEN_BORDER_START_PIXEL_Y = SEG_SEVEN_START_PIXEL_Y - 1;

    // pixel conditions
    wire show_border = !sw && (BORDER_X <= X && X < BORDER_X + BORDER_WIDTH && Y < BORDER_Y + BORDER_WIDTH || BORDER_Y <= Y && Y < BORDER_Y + BORDER_WIDTH && X < BORDER_X + BORDER_WIDTH);
    wire show_digit_horizontal_borders = 
        (SEG_ONE_BORDER_START_PIXEL_X <= X && X < SEG_ONE_BORDER_START_PIXEL_X + SEGMENT_LEN + SEGMENT_BORDER_WIDTH + 1 && (Y == SEG_ONE_BORDER_START_PIXEL_Y || Y == SEG_ONE_BORDER_START_PIXEL_Y + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH))
        || (SEG_FOUR_BORDER_START_PIXEL_X <= X && X < SEG_FOUR_BORDER_START_PIXEL_X + SEGMENT_LEN + SEGMENT_BORDER_WIDTH + 1 && (Y == SEG_FOUR_BORDER_START_PIXEL_Y || Y == SEG_FOUR_BORDER_START_PIXEL_Y + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH))
        || (SEG_SEVEN_BORDER_START_PIXEL_X <= X && X < SEG_SEVEN_BORDER_START_PIXEL_X + SEGMENT_LEN + SEGMENT_BORDER_WIDTH + 1&& (Y == SEG_SEVEN_BORDER_START_PIXEL_Y || Y == SEG_SEVEN_BORDER_START_PIXEL_Y + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH))
        || (SEG_TWO_BORDER_START_PIXEL_X <= X && X < SEG_TWO_BORDER_START_PIXEL_X + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH + 1 && (Y == SEG_TWO_BORDER_START_PIXEL_Y || Y == SEG_TWO_BORDER_START_PIXEL_Y + SEGMENT_LEN + SEGMENT_BORDER_WIDTH))
        || (SEG_THREE_BORDER_START_PIXEL_X <= X && X < SEG_THREE_BORDER_START_PIXEL_X + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH + 1 && (Y == SEG_THREE_BORDER_START_PIXEL_Y || Y == SEG_THREE_BORDER_START_PIXEL_Y + SEGMENT_LEN + SEGMENT_BORDER_WIDTH))
        || (SEG_FIVE_BORDER_START_PIXEL_X <= X && X < SEG_FIVE_BORDER_START_PIXEL_X + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH + 1 && (Y == SEG_FIVE_BORDER_START_PIXEL_Y || Y == SEG_FIVE_BORDER_START_PIXEL_Y + SEGMENT_LEN + SEGMENT_BORDER_WIDTH))
        || (SEG_SIX_BORDER_START_PIXEL_X <= X && X < SEG_SIX_BORDER_START_PIXEL_X + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH + 1&& (Y == SEG_SIX_BORDER_START_PIXEL_Y || Y == SEG_SIX_BORDER_START_PIXEL_Y + SEGMENT_LEN + SEGMENT_BORDER_WIDTH));
    wire show_digit_vertical_borders = 
        (SEG_ONE_BORDER_START_PIXEL_Y <= Y && Y < SEG_ONE_BORDER_START_PIXEL_Y + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH && (X == SEG_ONE_BORDER_START_PIXEL_X || X == SEG_ONE_BORDER_START_PIXEL_X + SEGMENT_LEN + SEGMENT_BORDER_WIDTH))
        || (SEG_FOUR_BORDER_START_PIXEL_Y <= Y && Y < SEG_FOUR_BORDER_START_PIXEL_Y + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH && (X == SEG_FOUR_BORDER_START_PIXEL_X || X == SEG_FOUR_BORDER_START_PIXEL_X + SEGMENT_LEN + SEGMENT_BORDER_WIDTH))
        || (SEG_SEVEN_BORDER_START_PIXEL_Y <= Y && Y < SEG_SEVEN_BORDER_START_PIXEL_Y + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH && (X == SEG_SEVEN_BORDER_START_PIXEL_X || X == SEG_SEVEN_BORDER_START_PIXEL_X + SEGMENT_LEN + SEGMENT_BORDER_WIDTH))
        || (SEG_TWO_BORDER_START_PIXEL_Y <= Y && Y < SEG_TWO_BORDER_START_PIXEL_Y + SEGMENT_LEN + SEGMENT_BORDER_WIDTH && (X == SEG_TWO_BORDER_START_PIXEL_X || X == SEG_TWO_BORDER_START_PIXEL_X + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH))
        || (SEG_THREE_BORDER_START_PIXEL_Y <= Y && Y < SEG_THREE_BORDER_START_PIXEL_Y + SEGMENT_LEN + SEGMENT_BORDER_WIDTH && (X == SEG_THREE_BORDER_START_PIXEL_X || X == SEG_THREE_BORDER_START_PIXEL_X + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH))
        || (SEG_FIVE_BORDER_START_PIXEL_Y <= Y && Y < SEG_FIVE_BORDER_START_PIXEL_Y + SEGMENT_LEN + SEGMENT_BORDER_WIDTH && (X == SEG_FIVE_BORDER_START_PIXEL_X || X == SEG_FIVE_BORDER_START_PIXEL_X + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH))
        || (SEG_SIX_BORDER_START_PIXEL_Y <= Y && Y < SEG_SIX_BORDER_START_PIXEL_Y + SEGMENT_LEN + SEGMENT_BORDER_WIDTH && (X == SEG_SIX_BORDER_START_PIXEL_X || X == SEG_SIX_BORDER_START_PIXEL_X + SEGMENT_WIDTH + SEGMENT_BORDER_WIDTH));
    wire show_digit_filled = 
        (oled_seg[0] && SEG_ONE_START_PIXEL_X <= X && X < SEG_ONE_START_PIXEL_X + SEGMENT_LEN && SEG_ONE_START_PIXEL_Y <= Y && Y < SEG_ONE_START_PIXEL_Y + SEGMENT_WIDTH)
        || (oled_seg[3] && SEG_FOUR_START_PIXEL_X <= X && X < SEG_FOUR_START_PIXEL_X + SEGMENT_LEN && SEG_FOUR_START_PIXEL_Y <= Y && Y < SEG_FOUR_START_PIXEL_Y + SEGMENT_WIDTH)
        || (oled_seg[6] && SEG_SEVEN_START_PIXEL_X <= X && X < SEG_SEVEN_START_PIXEL_X + SEGMENT_LEN && SEG_SEVEN_START_PIXEL_Y <= Y && Y < SEG_SEVEN_START_PIXEL_Y + SEGMENT_WIDTH)
        || (oled_seg[1] && SEG_TWO_START_PIXEL_X <= X && X < SEG_TWO_START_PIXEL_X + SEGMENT_WIDTH && SEG_TWO_START_PIXEL_Y <= Y && Y < SEG_TWO_START_PIXEL_Y + SEGMENT_LEN)
        || (oled_seg[2] && SEG_THREE_START_PIXEL_X <= X && X < SEG_THREE_START_PIXEL_X + SEGMENT_WIDTH && SEG_THREE_START_PIXEL_Y <= Y && Y < SEG_THREE_START_PIXEL_Y + SEGMENT_LEN)
        || (oled_seg[4] && SEG_FIVE_START_PIXEL_X <= X && X < SEG_FIVE_START_PIXEL_X + SEGMENT_WIDTH && SEG_FIVE_START_PIXEL_Y <= Y && Y < SEG_FIVE_START_PIXEL_Y + SEGMENT_LEN)
        || (oled_seg[5] && SEG_SIX_START_PIXEL_X <= X && X < SEG_SIX_START_PIXEL_X + SEGMENT_WIDTH && SEG_SIX_START_PIXEL_Y <= Y && Y < SEG_SIX_START_PIXEL_Y + SEGMENT_LEN);

    assign oled_pixel_data = show_border ? BORDER_COLOR
        : (show_digit_filled || show_digit_horizontal_borders || show_digit_vertical_borders) ? SEGMENT_COLOR
        : BACKGROUND_COLOR;

endmodule

